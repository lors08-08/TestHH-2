[{"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\index.js":"1","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\App.js":"2","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\redux\\index.js":"3","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\Loader\\Loader.js":"4","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Filter\\Filter.js":"5","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Table\\Table.js":"6","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Header\\Header.js":"7","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\redux\\actions.js":"8","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\redux\\listing.js":"9","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Table\\AddUser.js":"10","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Table\\PopUp.js":"11"},{"size":393,"mtime":1607260348467,"results":"12","hashOfConfig":"13"},{"size":781,"mtime":1607262679384,"results":"14","hashOfConfig":"13"},{"size":325,"mtime":1607260348513,"results":"15","hashOfConfig":"13"},{"size":429,"mtime":1607260348638,"results":"16","hashOfConfig":"13"},{"size":10043,"mtime":1607464304499,"results":"17","hashOfConfig":"13"},{"size":3767,"mtime":1607465250986,"results":"18","hashOfConfig":"13"},{"size":1616,"mtime":1607459720733,"results":"19","hashOfConfig":"13"},{"size":1266,"mtime":1607459720764,"results":"20","hashOfConfig":"13"},{"size":666,"mtime":1607262963124,"results":"21","hashOfConfig":"13"},{"size":1068,"mtime":1607459720748,"results":"22","hashOfConfig":"13"},{"size":12974,"mtime":1607459720748,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"8ercsa",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\index.js",[],["49","50"],"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\App.js",[],"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\redux\\index.js",[],"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Filter\\Filter.js",["51","52","53","54","55","56"],"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Table\\Table.js",["57","58","59","60","61"],"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Header\\Header.js",[],"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\redux\\actions.js",[],"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\redux\\listing.js",[],"C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Table\\AddUser.js",["62","63","64"],"import React from 'react';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {filteredUsers} from \"../../redux/actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PopUp from \"./PopUp\";\r\n\r\nfunction AddUser() {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop:\"20px\",\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      width:\"200px\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    myGrid: {\r\n      width:\"fit-content !important\"\r\n    },\r\n    myButton: {\r\n      fontSize:\"9px\",\r\n      padding:\"10px 30px 10px 30px\",\r\n      width:\"200px\"\r\n    }\r\n\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid justify=\"flex-end\" container  spacing={2}>\r\n        <Grid className={classes.myGrid} item xs={3}>\r\n          <PopUp />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddUser;","C:\\Users\\Lors\\Desktop\\Intocode\\TestsHH\\mozlabru\\src\\components\\MainBox\\Table\\PopUp.js",["65","66","67","68","69","70","71"],"import React, {useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addUser} from \"../../redux/actions\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  myButton: {\r\n    fontSize: \"9px\",\r\n    padding: \"10px 30px 10px 30px\",\r\n    width: \"200px\",\r\n    marginTop:\"20px\",\r\n    margin:\"auto\"\r\n  },\r\n  root: {\r\n    color:\"#3f51b5\",\r\n    fontWeight:\"700\"\r\n  },\r\n  column: {\r\n    textAlign:\"center\"\r\n  },\r\n  formControlButton: {\r\n    width: \"200px\",\r\n    paddingTop: \"17px\",\r\n  },\r\n  formControl: {\r\n    width: \"220px\",\r\n    wordBreak:\"break-all\"\r\n  },\r\n  myGridTop: {\r\n    marginTop:\"20px !important\"\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  underline: {\r\n    outline:\"none\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    padding: \"4px 11px 4px 11px\",\r\n    boxShadow: \"0 0 20px #bdbdbd\",\r\n    fontSize: \"9px\",\r\n    fontWeight: \"600\",\r\n    color: \"#797979\",\r\n    textAlign:\"left\",\r\n    \"&&&:before\": {\r\n      borderBottom: \"none\"\r\n    },\r\n    \"&&:after\": {\r\n      borderBottom: \"none\"\r\n    },\r\n    \"&&:focus\": {\r\n      outline:\"none\"\r\n    }\r\n  },\r\n  selector: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"5px\",\r\n    padding: \"4px 11px 4px 11px\",\r\n    boxShadow: \"0 0 20px #bdbdbd\",\r\n    fontSize: \"9px\",\r\n    fontWeight: \"600\",\r\n    color: \"#797979\",\r\n    textAlign:\"left\"\r\n  },\r\n}));\r\n\r\nfunction PopUp() {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const [newUserName, setNewUserName] = useState(\"\");\r\n  const [newUserNum, setNewUserNum] = useState(\"\");\r\n\r\n  const [newUserLogin, setNewUserLogin] = useState(\"\");\r\n  const [newUserPass, setNewUserPass] = useState(\"\");\r\n\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [spot, setSpot] = useState(\"\");\r\n  const [login, setLogin] = useState(\"\");\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleSetName = (e) => {\r\n    setNewUserName(e.target.value);\r\n  };\r\n  const handleSetNum = (e) => {\r\n    setNewUserNum(e.target.value);\r\n  };\r\n\r\n  const handleSetLogin = (e) => {\r\n    setNewUserLogin(e.target.value);\r\n  };\r\n  const handleSetPass = (e) => {\r\n    setNewUserPass(e.target.value);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setOpen(false);\r\n    dispatch(addUser(newUserName, selectedDate, spot, newUserLogin, newUserPass, newUserNum))\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleId = (event) => {\r\n    setId(event.target.value);\r\n  };\r\n  const handleName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const handleSpot = (event) => {\r\n    setSpot(event.target.value);\r\n  };\r\n  const handleLogin = (event) => {\r\n    setLogin(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle className={classes.root} disableTypography id=\"alert-dialog-title\">{\"Добавление данных о экспертах по оценке и руководителей\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Grid className={classes.column} container direction=\"column\"  spacing={2}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid className={classes.myGrid} item>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel\r\n                    shrink\r\n                    id=\"demo-simple-select-placeholder-label-label\"\r\n                    style={{\r\n                      lineHeight: \"1px\",\r\n                      color: \"rgb(92 94 179)\",\r\n                      fontSize: \"17px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Дата регистрации\r\n                  </InputLabel>\r\n                  <KeyboardDatePicker\r\n                    InputProps={{ classes }}\r\n                    disableToolbar\r\n                    variant=\"inline\"\r\n                    format=\"MM/dd/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date-picker-inline\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      'aria-label': 'change date',\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n              </MuiPickersUtilsProvider>\r\n              <Grid className={classes.myGridTop} item>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel\r\n                    shrink\r\n                    id=\"demo-simple-select-placeholder-label-label\"\r\n                    style={{\r\n                      lineHeight: \"1px\",\r\n                      color: \"rgb(92 94 179)\",\r\n                      fontSize: \"17px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    ФИО\r\n                  </InputLabel>\r\n                  <input\r\n                    onChange={handleSetName}\r\n                    value={newUserName}\r\n                    placeholder=\"Введите ФИО участника\"\r\n                    style={{\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: \"5px\",\r\n                    padding: \"4px 11px 4px 11px\",\r\n                    boxShadow: \"0 0 20px #bdbdbd\",\r\n                    fontSize: \"9px\",\r\n                    fontWeight: \"600\",\r\n                    color: \"#797979\",\r\n                    textAlign:\"left\",\r\n                    border:\"0px\",\r\n                    marginTop:\"15px\",\r\n                    height:\"31px\"\r\n                  }} />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid className={classes.myGridTop} item>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel\r\n                    shrink\r\n                    id=\"demo-simple-select-placeholder-label-label\"\r\n                    style={{\r\n                      lineHeight: \"1px\",\r\n                      color: \"rgb(92 94 179)\",\r\n                      fontSize: \"17px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Должность\r\n                  </InputLabel>\r\n                  <Select\r\n                    disableUnderline\r\n                    labelId=\"demo-simple-select-placeholder-label-label\"\r\n                    id=\"demo-simple-select-placeholder-label\"\r\n                    value={spot}\r\n                    onChange={handleSpot}\r\n                    displayEmpty\r\n                    className={classes.selector}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>Введите должность участника</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"Внешний Эксперт\">Внешний Эксперт</MenuItem>\r\n                    <MenuItem value=\"HR BP\">HR BP</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid className={classes.myGridTop} item>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel\r\n                    shrink\r\n                    id=\"demo-simple-select-placeholder-label-label\"\r\n                    style={{\r\n                      lineHeight: \"1px\",\r\n                      color: \"rgb(92 94 179)\",\r\n                      fontSize: \"17px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Почта(логин)\r\n                  </InputLabel>\r\n                  <input\r\n                    onChange={handleSetLogin}\r\n                    value={newUserLogin}\r\n                    placeholder=\"Введите почту\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      borderRadius: \"5px\",\r\n                      padding: \"4px 11px 4px 11px\",\r\n                      boxShadow: \"0 0 20px #bdbdbd\",\r\n                      fontSize: \"9px\",\r\n                      fontWeight: \"600\",\r\n                      color: \"#797979\",\r\n                      textAlign:\"left\",\r\n                      border:\"0px\",\r\n                      marginTop:\"15px\",\r\n                      height:\"31px\"\r\n                    }} />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid className={classes.myGridTop} item>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel\r\n                    shrink\r\n                    id=\"demo-simple-select-placeholder-label-label\"\r\n                    style={{\r\n                      lineHeight: \"1px\",\r\n                      color: \"rgb(92 94 179)\",\r\n                      fontSize: \"17px\",\r\n                      fontWeight: \"bold\",\r\n                    }}\r\n                  >\r\n                    Пароль\r\n                  </InputLabel>\r\n                  <input\r\n                    type=\"password\"\r\n                    onChange={handleSetPass}\r\n                    placeholder=\"Введите пароль\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      borderRadius: \"5px\",\r\n                      padding: \"4px 11px 4px 11px\",\r\n                      boxShadow: \"0 0 20px #bdbdbd\",\r\n                      fontSize: \"9px\",\r\n                      fontWeight: \"600\",\r\n                      color: \"#797979\",\r\n                      textAlign:\"left\",\r\n                      border:\"0px\",\r\n                      marginTop:\"15px\",\r\n                      height:\"31px\"\r\n                    }} />\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid className={classes.myGridTop} item>\r\n                <FormControl className={classes.formControl}>\r\n                  <InputLabel\r\n                    shrink\r\n                    id=\"demo-simple-select-placeholder-label-label\"\r\n                    style={{\r\n                      lineHeight: \"17px\",\r\n                      color: \"rgb(92 94 179)\",\r\n                      fontSize: \"17px\",\r\n                      fontWeight: \"bold\",\r\n                      textAlign:\"left\"\r\n                    }}\r\n                  >\r\n                    Телефон,привязанный к мессенджеру\r\n                  </InputLabel>\r\n                  <input\r\n                    onChange={handleSetNum}\r\n                    value={newUserNum}\r\n                    placeholder=\"Введите номер телефона\"\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      borderRadius: \"5px\",\r\n                      padding: \"4px 11px 4px 11px\",\r\n                      boxShadow: \"0 0 20px #bdbdbd\",\r\n                      fontSize: \"9px\",\r\n                      fontWeight: \"600\",\r\n                      color: \"#797979\",\r\n                      textAlign:\"left\",\r\n                      border:\"0px\",\r\n                      marginTop:\"35px\",\r\n                      height:\"31px\"\r\n                    }} />\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            className={classes.myButton}\r\n            onClick={handleAdd} color=\"primary\" autoFocus variant=\"contained\" color=\"primary\"\r\n          >\r\n            Применить фильтры\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Button onClick={handleClickOpen} className={classes.myButton} variant=\"contained\" color=\"primary\">\r\n        Добавить пользователя\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopUp;\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":12,"column":9,"nodeType":"78","messageId":"79","endLine":12,"endColumn":17},{"ruleId":"76","severity":1,"message":"80","line":15,"column":8,"nodeType":"78","messageId":"79","endLine":15,"endColumn":21},{"ruleId":"76","severity":1,"message":"81","line":19,"column":9,"nodeType":"78","messageId":"79","endLine":19,"endColumn":18},{"ruleId":"76","severity":1,"message":"82","line":29,"column":9,"nodeType":"78","messageId":"79","endLine":29,"endColumn":14},{"ruleId":"76","severity":1,"message":"83","line":106,"column":9,"nodeType":"78","messageId":"79","endLine":106,"endColumn":16},{"ruleId":"76","severity":1,"message":"84","line":129,"column":9,"nodeType":"78","messageId":"79","endLine":129,"endColumn":13},{"ruleId":"76","severity":1,"message":"85","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":16},{"ruleId":"76","severity":1,"message":"86","line":54,"column":9,"nodeType":"78","messageId":"79","endLine":54,"endColumn":14},{"ruleId":"76","severity":1,"message":"87","line":55,"column":10,"nodeType":"78","messageId":"79","endLine":55,"endColumn":17},{"ruleId":"76","severity":1,"message":"88","line":55,"column":19,"nodeType":"78","messageId":"79","endLine":55,"endColumn":29},{"ruleId":"76","severity":1,"message":"89","line":65,"column":9,"nodeType":"78","messageId":"79","endLine":65,"endColumn":16},{"ruleId":"76","severity":1,"message":"90","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":13},{"ruleId":"76","severity":1,"message":"91","line":5,"column":9,"nodeType":"78","messageId":"79","endLine":5,"endColumn":22},{"ruleId":"76","severity":1,"message":"92","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":14},{"ruleId":"76","severity":1,"message":"93","line":93,"column":10,"nodeType":"78","messageId":"79","endLine":93,"endColumn":12},{"ruleId":"76","severity":1,"message":"94","line":94,"column":10,"nodeType":"78","messageId":"79","endLine":94,"endColumn":14},{"ruleId":"76","severity":1,"message":"95","line":96,"column":10,"nodeType":"78","messageId":"79","endLine":96,"endColumn":15},{"ruleId":"76","severity":1,"message":"96","line":134,"column":9,"nodeType":"78","messageId":"79","endLine":134,"endColumn":17},{"ruleId":"76","severity":1,"message":"97","line":137,"column":9,"nodeType":"78","messageId":"79","endLine":137,"endColumn":19},{"ruleId":"76","severity":1,"message":"98","line":143,"column":9,"nodeType":"78","messageId":"79","endLine":143,"endColumn":20},{"ruleId":"99","severity":1,"message":"100","line":360,"column":79,"nodeType":"101","endLine":360,"endColumn":94},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'DataGrid' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'GlobalCss' is assigned a value but never used.","'theme' is assigned a value but never used.","'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","'Checkbox' is defined but never used.","'users' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'classes' is assigned a value but never used.","'Paper' is defined but never used.","'filteredUsers' is defined but never used.","'Button' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'login' is assigned a value but never used.","'handleId' is assigned a value but never used.","'handleName' is assigned a value but never used.","'handleLogin' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]