[{"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\index.js":"1","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\App.js":"2","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\redux\\index.js":"3","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\redux\\actions.js":"4","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\Loader\\Loader.js":"5","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Header\\Header.js":"6","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Table\\Table.js":"7","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Filter\\Filter.js":"8","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\redux\\listing.js":"9","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Table\\AddUser.js":"10","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Table\\PopUp.js":"11"},{"size":409,"mtime":1607335972615,"results":"12","hashOfConfig":"13"},{"size":811,"mtime":1607335972569,"results":"14","hashOfConfig":"13"},{"size":336,"mtime":1607335972608,"results":"15","hashOfConfig":"13"},{"size":1266,"mtime":1607432748513,"results":"16","hashOfConfig":"13"},{"size":445,"mtime":1607335972575,"results":"17","hashOfConfig":"13"},{"size":1616,"mtime":1607340835907,"results":"18","hashOfConfig":"13"},{"size":2049,"mtime":1607336632031,"results":"19","hashOfConfig":"13"},{"size":9739,"mtime":1607440152774,"results":"20","hashOfConfig":"13"},{"size":701,"mtime":1607335972611,"results":"21","hashOfConfig":"13"},{"size":1068,"mtime":1607341625061,"results":"22","hashOfConfig":"13"},{"size":12601,"mtime":1607433080424,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1wkv6wl",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\index.js",[],["49","50"],"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\App.js",[],"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\redux\\index.js",[],"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\redux\\actions.js",[],"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Header\\Header.js",[],"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Table\\Table.js",[],"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Filter\\Filter.js",["51"],"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\redux\\listing.js",[],"C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Table\\AddUser.js",["52","53","54"],"import React from 'react';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {filteredUsers} from \"../../redux/actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PopUp from \"./PopUp\";\r\n\r\nfunction AddUser() {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop:\"20px\",\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      width:\"200px\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    myGrid: {\r\n      width:\"fit-content !important\"\r\n    },\r\n    myButton: {\r\n      fontSize:\"9px\",\r\n      padding:\"10px 30px 10px 30px\",\r\n      width:\"200px\"\r\n    }\r\n\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid justify=\"flex-end\" container  spacing={2}>\r\n        <Grid className={classes.myGrid} item xs={3}>\r\n          <PopUp />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddUser;","C:\\Users\\1-48-16\\Desktop\\intocode\\TestHH-2\\src\\components\\MainBox\\Table\\PopUp.js",["55","56","57","58","59","60","61"],"import React, {useState} from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport {useDispatch} from \"react-redux\";\nimport {addUser} from \"../../redux/actions\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nconst useStyles = makeStyles((theme) => ({\n  myButton: {\n    fontSize: \"9px\",\n    padding: \"10px 30px 10px 30px\",\n    width: \"200px\",\n    marginTop:\"20px\",\n    margin:\"auto\"\n  },\n  root: {\n    color:\"#3f51b5\",\n    fontWeight:\"700\"\n  },\n  column: {\n    textAlign:\"center\"\n  },\n  formControlButton: {\n    width: \"200px\",\n    paddingTop: \"17px\",\n  },\n  formControl: {\n    width: \"220px\",\n    wordBreak:\"break-all\"\n  },\n  myGridTop: {\n    marginTop:\"20px !important\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  underline: {\n    outline:\"none\",\n    backgroundColor: \"white\",\n    borderRadius: \"5px\",\n    padding: \"4px 11px 4px 11px\",\n    boxShadow: \"0 0 20px #bdbdbd\",\n    fontSize: \"9px\",\n    fontWeight: \"600\",\n    color: \"#797979\",\n    textAlign:\"left\",\n    \"&&&:before\": {\n      borderBottom: \"none\"\n    },\n    \"&&:after\": {\n      borderBottom: \"none\"\n    },\n    \"&&:focus\": {\n      outline:\"none\"\n    }\n  },\n  selector: {\n    backgroundColor: \"white\",\n    borderRadius: \"5px\",\n    padding: \"4px 11px 4px 11px\",\n    boxShadow: \"0 0 20px #bdbdbd\",\n    fontSize: \"9px\",\n    fontWeight: \"600\",\n    color: \"#797979\",\n    textAlign:\"left\"\n  },\n}));\n\nfunction PopUp() {\n  const dispatch = useDispatch()\n\n\n  const [newUserName, setNewUserName] = useState(\"\");\n  const [newUserNum, setNewUserNum] = useState(\"\");\n\n  const [newUserLogin, setNewUserLogin] = useState(\"\");\n  const [newUserPass, setNewUserPass] = useState(\"\");\n\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [spot, setSpot] = useState(\"\");\n  const [login, setLogin] = useState(\"\");\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleSetName = (e) => {\n    setNewUserName(e.target.value);\n  };\n  const handleSetNum = (e) => {\n    setNewUserNum(e.target.value);\n  };\n\n  const handleSetLogin = (e) => {\n    setNewUserLogin(e.target.value);\n  };\n  const handleSetPass = (e) => {\n    setNewUserPass(e.target.value);\n  };\n\n  const handleAdd = () => {\n    setOpen(false);\n    dispatch(addUser(newUserName, selectedDate, spot, newUserLogin, newUserPass, newUserNum))\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleId = (event) => {\n    setId(event.target.value);\n  };\n  const handleName = (event) => {\n    setName(event.target.value);\n  };\n  const handleSpot = (event) => {\n    setSpot(event.target.value);\n  };\n  const handleLogin = (event) => {\n    setLogin(event.target.value);\n  };\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle className={classes.root} disableTypography id=\"alert-dialog-title\">{\"Добавление данных о экспертах по оценке и руководителей\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Grid className={classes.column} container direction=\"column\"  spacing={2}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid className={classes.myGrid} item>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    shrink\n                    id=\"demo-simple-select-placeholder-label-label\"\n                    style={{\n                      lineHeight: \"1px\",\n                      color: \"rgb(92 94 179)\",\n                      fontSize: \"17px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Дата регистрации\n                  </InputLabel>\n                  <KeyboardDatePicker\n                    InputProps={{ classes }}\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"MM/dd/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                  />\n                </FormControl>\n              </Grid>\n              </MuiPickersUtilsProvider>\n              <Grid className={classes.myGridTop} item>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    shrink\n                    id=\"demo-simple-select-placeholder-label-label\"\n                    style={{\n                      lineHeight: \"1px\",\n                      color: \"rgb(92 94 179)\",\n                      fontSize: \"17px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    ФИО\n                  </InputLabel>\n                  <input\n                    onChange={handleSetName}\n                    value={newUserName}\n                    placeholder=\"Введите ФИО участника\"\n                    style={{\n                    backgroundColor: \"white\",\n                    borderRadius: \"5px\",\n                    padding: \"4px 11px 4px 11px\",\n                    boxShadow: \"0 0 20px #bdbdbd\",\n                    fontSize: \"9px\",\n                    fontWeight: \"600\",\n                    color: \"#797979\",\n                    textAlign:\"left\",\n                    border:\"0px\",\n                    marginTop:\"15px\",\n                    height:\"31px\"\n                  }} />\n                </FormControl>\n              </Grid>\n              <Grid className={classes.myGridTop} item>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    shrink\n                    id=\"demo-simple-select-placeholder-label-label\"\n                    style={{\n                      lineHeight: \"1px\",\n                      color: \"rgb(92 94 179)\",\n                      fontSize: \"17px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Должность\n                  </InputLabel>\n                  <Select\n                    disableUnderline\n                    labelId=\"demo-simple-select-placeholder-label-label\"\n                    id=\"demo-simple-select-placeholder-label\"\n                    value={spot}\n                    onChange={handleSpot}\n                    displayEmpty\n                    className={classes.selector}\n                  >\n                    <MenuItem value=\"\">\n                      <em>Введите должность участника</em>\n                    </MenuItem>\n                    <MenuItem value=\"Внешний Эксперт\">Внешний Эксперт</MenuItem>\n                    <MenuItem value=\"HR BP\">HR BP</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid className={classes.myGridTop} item>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    shrink\n                    id=\"demo-simple-select-placeholder-label-label\"\n                    style={{\n                      lineHeight: \"1px\",\n                      color: \"rgb(92 94 179)\",\n                      fontSize: \"17px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Почта(логин)\n                  </InputLabel>\n                  <input\n                    onChange={handleSetLogin}\n                    value={newUserLogin}\n                    placeholder=\"Введите почту\"\n                    style={{\n                      backgroundColor: \"white\",\n                      borderRadius: \"5px\",\n                      padding: \"4px 11px 4px 11px\",\n                      boxShadow: \"0 0 20px #bdbdbd\",\n                      fontSize: \"9px\",\n                      fontWeight: \"600\",\n                      color: \"#797979\",\n                      textAlign:\"left\",\n                      border:\"0px\",\n                      marginTop:\"15px\",\n                      height:\"31px\"\n                    }} />\n                </FormControl>\n              </Grid>\n              <Grid className={classes.myGridTop} item>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    shrink\n                    id=\"demo-simple-select-placeholder-label-label\"\n                    style={{\n                      lineHeight: \"1px\",\n                      color: \"rgb(92 94 179)\",\n                      fontSize: \"17px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Пароль\n                  </InputLabel>\n                  <input\n                    type=\"password\"\n                    onChange={handleSetPass}\n                    placeholder=\"Введите пароль\"\n                    style={{\n                      backgroundColor: \"white\",\n                      borderRadius: \"5px\",\n                      padding: \"4px 11px 4px 11px\",\n                      boxShadow: \"0 0 20px #bdbdbd\",\n                      fontSize: \"9px\",\n                      fontWeight: \"600\",\n                      color: \"#797979\",\n                      textAlign:\"left\",\n                      border:\"0px\",\n                      marginTop:\"15px\",\n                      height:\"31px\"\n                    }} />\n                </FormControl>\n              </Grid>\n              <Grid className={classes.myGridTop} item>\n                <FormControl className={classes.formControl}>\n                  <InputLabel\n                    shrink\n                    id=\"demo-simple-select-placeholder-label-label\"\n                    style={{\n                      lineHeight: \"17px\",\n                      color: \"rgb(92 94 179)\",\n                      fontSize: \"17px\",\n                      fontWeight: \"bold\",\n                      textAlign:\"left\"\n                    }}\n                  >\n                    Телефон,привязанный к мессенджеру\n                  </InputLabel>\n                  <input\n                    onChange={handleSetNum}\n                    value={newUserNum}\n                    placeholder=\"Введите номер телефона\"\n                    style={{\n                      backgroundColor: \"white\",\n                      borderRadius: \"5px\",\n                      padding: \"4px 11px 4px 11px\",\n                      boxShadow: \"0 0 20px #bdbdbd\",\n                      fontSize: \"9px\",\n                      fontWeight: \"600\",\n                      color: \"#797979\",\n                      textAlign:\"left\",\n                      border:\"0px\",\n                      marginTop:\"35px\",\n                      height:\"31px\"\n                    }} />\n                </FormControl>\n              </Grid>\n            </Grid>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            className={classes.myButton}\n            onClick={handleAdd} color=\"primary\" autoFocus variant=\"contained\" color=\"primary\"\n          >\n            Применить фильтры\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Button onClick={handleClickOpen} className={classes.myButton} variant=\"contained\" color=\"primary\">\n        Добавить пользователя\n      </Button>\n    </>\n  );\n}\n\nexport default PopUp;\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":null,"fatal":true,"severity":2,"message":"66","line":20,"column":9},{"ruleId":"67","severity":1,"message":"68","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":13},{"ruleId":"67","severity":1,"message":"71","line":5,"column":9,"nodeType":"69","messageId":"70","endLine":5,"endColumn":22},{"ruleId":"67","severity":1,"message":"72","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":93,"column":10,"nodeType":"69","messageId":"70","endLine":93,"endColumn":12},{"ruleId":"67","severity":1,"message":"74","line":94,"column":10,"nodeType":"69","messageId":"70","endLine":94,"endColumn":14},{"ruleId":"67","severity":1,"message":"75","line":96,"column":10,"nodeType":"69","messageId":"70","endLine":96,"endColumn":15},{"ruleId":"67","severity":1,"message":"76","line":134,"column":9,"nodeType":"69","messageId":"70","endLine":134,"endColumn":17},{"ruleId":"67","severity":1,"message":"77","line":137,"column":9,"nodeType":"69","messageId":"70","endLine":137,"endColumn":19},{"ruleId":"67","severity":1,"message":"78","line":143,"column":9,"nodeType":"69","messageId":"70","endLine":143,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":360,"column":79,"nodeType":"81","endLine":360,"endColumn":94},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 18 | \u001b[39m    overrides\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m      root\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 20 | \u001b[39m        \u001b[33m.\u001b[39m\u001b[33mMuiDataGridColCellCheckbox\u001b[39m\u001b[33m:\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 21 | \u001b[39m          \u001b[90m// Some CSS\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 22 | \u001b[39m          backgroundColor\u001b[33m:\u001b[39m \u001b[32m'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m          borderRadius\u001b[33m:\u001b[39m \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m\u001b[0m","no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'filteredUsers' is defined but never used.","'Button' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'login' is assigned a value but never used.","'handleId' is assigned a value but never used.","'handleName' is assigned a value but never used.","'handleLogin' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]